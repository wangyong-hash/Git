---------------------------------------------------------------------------------
第一步： 是创建一个创建版本库 .git
.git  ： 中存了很多东西： 
1： stage : 暂存区， 
2： git 自动创建的第一个分支： master
3:    以及指向 master的 HEAD 指针。
-----------------------------------------------------------------

<第一种方式>:

1： 建立一个 目录。
2:    启动Git Bash Here 
3:    输入命令： git init
------------
<第二种方式>：

直接创建版本库： 
1：只需要在 目录中点击菜单右键， 选择 Git 在这里创建版本库。
最终结果：会得到一个 .git 隐藏目录。

-------------------------------------------------------------------------------------
| 第二步： 添加文件：|
------------------------------------------------------------------------------------

1： 选中文件右键：点击选择添加：+ add（会变成前面图标变成 +）
	// 就是将 文件添加到 暂存区
2： 选中文件右键:   点击Git 提交到 master (日志内容必须填写， 提交到本地仓库)
	// 就是将 暂存区的内容提交到当前分支。
--------------------------------------------------------------------------

------------------------------------------
第三步： 修改文件和查看日志：|
------------------------------------------

1： 修改文件之后， 选择提交， 添加修改日志信息。
2： 工作目录的空白处：右键选择查看日志信息。（每一次的（commit）提交都会有记录）
3： 添加了 查看比较差异。（显示 黄色的就是差异部分）
4:   右键选择： 还原没有提交的操作
	// 此操作会撤销所有为提交的修改。慎重操作。
5： 在 目录下删除文件时， 要进行提交操作。进行提交都本地仓库。

--------------------------------------------
-------------------------------
第四步： 忽略文件或者文件夹|
-------------------------------
1: 为了忽略一些文件， 可以选择 git 工作目录下有一个 .gitignore 文件， 直接把文件名写进去， Git 就会自动忽略。
2： 右键要忽略的文件： 选择：Tortoise -> 删除并添加到列表->
	// ：选择：递归忽略文件和目录。
	// :  .gitignore 放在文件、文件夹所在目录中。
	// ： 提交 .gitgnore 到 master 分支。将文件提交到 暂存区， 然后提交到版本库。
3：.gitigore 你可以在添加你要删除的文件。
	---------------------------------------------------------------------------------------------
	空行或是以 # 开头的行即注释行将被忽略。
	可以在前面添加正斜杠 / 来避免递归,下面的例子中可以很明白的看出来与下一条的区别。
	可以在后面添加正斜杠 / 来忽略文件夹，例如 build/ 即忽略build文件夹。
	可以使用 ! 来否定忽略，即比如在前面用了 *.apk ，然后使用 !a.apk ，则这个a.apk不会被忽略。
	* 用来匹配零个或多个字符，如 *.[oa] 忽略所有以".o"或".a"结尾， *~ 忽略所有以 ~ 结尾的文件（这种文件通常被许多编辑器标记为临时文件）； [] 用来匹配括号内的任一字符，如 [abc] ，也可以在括号内加连接符，如 [0-9] 匹配0至9的数； ? 用来匹配单个字符。 
	看了这么多，还是应该来个栗子：
	# 忽略 .a 文件
	*.a
	# 但否定忽略 lib.a, 尽管已经在前面忽略了 .a 文件
	----------------------------------------------------------------------------------------------